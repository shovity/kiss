{"html":"<canvas id=\"myCanvas\" width=\"600\" height=\"500\">\n\tYour browser does not support the HTML5 canvas tag\n</canvas>","css":"#myCanvas {\n    border:1px solid #d3d3d3;\n    background: #fafafa;\n}","js":"var canvas = document.getElementById(\"myCanvas\");\nvar ctx = canvas.getContext(\"2d\");\nvar generation = 0;\nvar tree = new Branch(70, 0);\ndraw();\n\nfunction draw() {\n    ctx.save();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.translate(canvas.width / 2, canvas.height - 10);\n    tree.render();\n    ctx.restore();\n    window.requestAnimationFrame(draw);\n}\n\nfunction Branch(size, rotation) {\n    generation++;\n    var sway = 0;\n    var swaySpeed = random(0.02, 0.1);\n    var growth = 0;\n    var delay = generation * 10;\n\n    this.children = [];\n    if (size > 10) {\n        this.children.push(new Branch(size * random(0.7, 0.9), random(0, 30)));\n        this.children.push(new Branch(size * random(0.7, 0.9), random(0, -30)));\n    }\n\n    this.render = function() {\n        ctx.save();\n        ctx.rotate((rotation + Math.sin(sway)) * Math.PI / 180);\n        ctx.strokeStyle = 'black';\n        ctx.beginPath();\n        ctx.lineWidth = size * 0.1 * growth;\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, -size * growth);\n        ctx.stroke();\n        ctx.translate(0, -size * growth);\n\n        for (var i = 0; i < this.children.length; i++) {\n            this.children[i].render();\n        }\n\n        ctx.restore();\n        sway += swaySpeed;\n        if (delay > 0) {\n            delay--;\n        } else {\n            growth += (1 - growth) * 0.1;\n        }\n    }\n    generation--;\n}\n\nfunction random(min, max) {\n    return Math.random() * (max - min) + min;\n}"}